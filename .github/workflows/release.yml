name: release
on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1

      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build
        
      - name: Get Version
        run: echo "version=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV

      - name: Get Changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_ENV
          git log --format=%B -n 1 >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: NPM Publish
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          release_name: Release v${{ env.version }}
          body: ${{ env.changelog }}
          draft: false
          prerelease: false
      
      - name: Create TAR
        run: tar -C dist/ -vcf dist.tar ./

      - name: Upload Build
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./dist.tar
          asset_name: v${{ env.version }}.tar
          asset_content_type: application/tar
